name: Assign reviewer by comment
on: [issue_comment, pull_request_review]

jobs:
  assign_review_by_comment:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: assign_review_by_comment

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: python
        run: |
          import yaml
          import os
          import requests
          import json
          from pathlib import Path

          with Path(os.environ['GITHUB_EVENT_PATH']).open() as file:
            dd = yaml.full_load(file)

          resp = requests.get(dd['comment']['issue_url'],
                          headers={'Authorization': f'Bearer {os.environ["GITHUB_TOKEN"]}'})
          current_assignees = [user['login'] for user in resp.json()['assignees']]

          if dd['comment']['body'].startswith('/take'):
            current_assignees.append(dd['comment']['user']['login'])
            data = json.dumps({"assignees": current_assignees})
            resp = requests.post(dd['comment']['issue_url'], 
                          headers={'Authorization': f'Bearer {os.environ["GITHUB_TOKEN"]}'},
                          data=data)
            resp.raise_for_status()

          if dd['comment']['body'].startswith('/assign'):
            current_assignees.extend([user.replace('@', '') for user in dd['comment']['body'].split(' ')[1:]])
            data = json.dumps({"assignees": assignees})
            resp = requests.post(dd['comment']['issue_url'], 
                          headers={'Authorization': f'Bearer {os.environ["GITHUB_TOKEN"]}'},
                          data=data)
            resp.raise_for_status()

          if dd['comment']['body'].startswith('/unassign'):
            for user in [user.replace('@', '') for user in dd['comment']['body'].split(' ')[1:]]:
              if user in current_assignees:
                current_assignees.remove(user)
            data = json.dumps({"assignees": assignees})
            resp = requests.post(dd['comment']['issue_url'], 
                          headers={'Authorization': f'Bearer {os.environ["GITHUB_TOKEN"]}'},
                          data=data)
            resp.raise_for_status()
